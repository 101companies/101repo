== Intent ==

illustration of the Template design pattern in Java

== Languages ==

* [[Language:Java]] (Version 5)

== Technologies ==

* [[101profile:Simple Java]]

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]

== Motivation ==

We identify templates for queries and transformations over companies.
We instantiate those templates for totaling and cutting salaries.

== Architecture ==

Package ''org.softlang.company'' hosts the object model for [[101feature:Company]].
(These classes were adopted from [[101implementation:javaComposition]] with the
instance methods for totaling and cutting removed.)
Package ''org.softlang.template'' hosts the templates for queries and transformations.
Package ''org.softlang.features'' hosts the features [[101feature:Total]] and [[101feature:Cut]].
Package ''org.softlang.tests'' hosts JUnit tests; see below.

== Usage ==

* The implementation is provided as an Eclipse project. 
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available in the package ''org.softlang.tests''.
** Run class ''Basics'' with JUnit to exercise basic features.
** Run class ''Serialization'' with JUnit to exercise serialization.

== Contributors ==

* {{101contributor|Ralf LÃ¤mmel|developer}}