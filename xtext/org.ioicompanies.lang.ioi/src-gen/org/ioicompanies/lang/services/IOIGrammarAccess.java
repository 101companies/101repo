/*
* generated by Xtext
*/

package org.ioicompanies.lang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class IOIGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIOICompaniesModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCompaniesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCompaniesCompanyParserRuleCall_2_0 = (RuleCall)cCompaniesAssignment_2.eContents().get(0);
		private final Assignment cCompaniesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCompaniesCompanyParserRuleCall_3_0 = (RuleCall)cCompaniesAssignment_3.eContents().get(0);
		
		//Model:
		//	"IOICompaniesModel" name=ID companies+=Company companies+=Company*;
		public ParserRule getRule() { return rule; }

		//"IOICompaniesModel" name=ID companies+=Company companies+=Company*
		public Group getGroup() { return cGroup; }

		//"IOICompaniesModel"
		public Keyword getIOICompaniesModelKeyword_0() { return cIOICompaniesModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//companies+=Company
		public Assignment getCompaniesAssignment_2() { return cCompaniesAssignment_2; }

		//Company
		public RuleCall getCompaniesCompanyParserRuleCall_2_0() { return cCompaniesCompanyParserRuleCall_2_0; }

		//companies+=Company*
		public Assignment getCompaniesAssignment_3() { return cCompaniesAssignment_3; }

		//Company
		public RuleCall getCompaniesCompanyParserRuleCall_3_0() { return cCompaniesCompanyParserRuleCall_3_0; }
	}

	public class EmployeeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Employee");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmployee_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManagerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Employee:
		//	Employee_Impl | Manager;
		public ParserRule getRule() { return rule; }

		//Employee_Impl | Manager
		public Alternatives getAlternatives() { return cAlternatives; }

		//Employee_Impl
		public RuleCall getEmployee_ImplParserRuleCall_0() { return cEmployee_ImplParserRuleCall_0; }

		//Manager
		public RuleCall getManagerParserRuleCall_1() { return cManagerParserRuleCall_1; }
	}

	public class CompanyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Company");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompanyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPositionsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPositionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPositionsPositionParserRuleCall_5_0 = (RuleCall)cPositionsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPositionsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPositionsPositionParserRuleCall_6_1_0 = (RuleCall)cPositionsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDepartmentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDepartmentsDepartmentParserRuleCall_8_0 = (RuleCall)cDepartmentsAssignment_8.eContents().get(0);
		private final Assignment cDepartmentsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDepartmentsDepartmentParserRuleCall_9_0 = (RuleCall)cDepartmentsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Company:
		//	"Company" name=ID "{" "Positions:" "(" positions+=Position ("," positions+=Position)* ")" departments+=Department
		//	departments+=Department* "}";
		public ParserRule getRule() { return rule; }

		//"Company" name=ID "{" "Positions:" "(" positions+=Position ("," positions+=Position)* ")" departments+=Department
		//departments+=Department* "}"
		public Group getGroup() { return cGroup; }

		//"Company"
		public Keyword getCompanyKeyword_0() { return cCompanyKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"Positions:"
		public Keyword getPositionsKeyword_3() { return cPositionsKeyword_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//positions+=Position
		public Assignment getPositionsAssignment_5() { return cPositionsAssignment_5; }

		//Position
		public RuleCall getPositionsPositionParserRuleCall_5_0() { return cPositionsPositionParserRuleCall_5_0; }

		//("," positions+=Position)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//positions+=Position
		public Assignment getPositionsAssignment_6_1() { return cPositionsAssignment_6_1; }

		//Position
		public RuleCall getPositionsPositionParserRuleCall_6_1_0() { return cPositionsPositionParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//departments+=Department
		public Assignment getDepartmentsAssignment_8() { return cDepartmentsAssignment_8; }

		//Department
		public RuleCall getDepartmentsDepartmentParserRuleCall_8_0() { return cDepartmentsDepartmentParserRuleCall_8_0; }

		//departments+=Department*
		public Assignment getDepartmentsAssignment_9() { return cDepartmentsAssignment_9; }

		//Department
		public RuleCall getDepartmentsDepartmentParserRuleCall_9_0() { return cDepartmentsDepartmentParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class DepartmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Department");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDepartmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManagerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cManagerManagerParserRuleCall_3_0 = (RuleCall)cManagerAssignment_3.eContents().get(0);
		private final Assignment cEmployeesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEmployeesEmployeeParserRuleCall_4_0 = (RuleCall)cEmployeesAssignment_4.eContents().get(0);
		private final Assignment cEmployeesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEmployeesEmployeeParserRuleCall_5_0 = (RuleCall)cEmployeesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubdepartmentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSub_departmentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSub_departmentDepartmentParserRuleCall_6_1_0 = (RuleCall)cSub_departmentAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Department:
		//	"Department" name=ID "{" manager=Manager employees+=Employee employees+=Employee* ("subdepartment"
		//	sub_department=Department)? "}";
		public ParserRule getRule() { return rule; }

		//"Department" name=ID "{" manager=Manager employees+=Employee employees+=Employee* ("subdepartment"
		//sub_department=Department)? "}"
		public Group getGroup() { return cGroup; }

		//"Department"
		public Keyword getDepartmentKeyword_0() { return cDepartmentKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//manager=Manager
		public Assignment getManagerAssignment_3() { return cManagerAssignment_3; }

		//Manager
		public RuleCall getManagerManagerParserRuleCall_3_0() { return cManagerManagerParserRuleCall_3_0; }

		//employees+=Employee
		public Assignment getEmployeesAssignment_4() { return cEmployeesAssignment_4; }

		//Employee
		public RuleCall getEmployeesEmployeeParserRuleCall_4_0() { return cEmployeesEmployeeParserRuleCall_4_0; }

		//employees+=Employee*
		public Assignment getEmployeesAssignment_5() { return cEmployeesAssignment_5; }

		//Employee
		public RuleCall getEmployeesEmployeeParserRuleCall_5_0() { return cEmployeesEmployeeParserRuleCall_5_0; }

		//("subdepartment" sub_department=Department)?
		public Group getGroup_6() { return cGroup_6; }

		//"subdepartment"
		public Keyword getSubdepartmentKeyword_6_0() { return cSubdepartmentKeyword_6_0; }

		//sub_department=Department
		public Assignment getSub_departmentAssignment_6_1() { return cSub_departmentAssignment_6_1; }

		//Department
		public RuleCall getSub_departmentDepartmentParserRuleCall_6_1_0() { return cSub_departmentDepartmentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class PositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Position");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPositionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Position:
		//	{Position} name=ID;
		public ParserRule getRule() { return rule; }

		//{Position} name=ID
		public Group getGroup() { return cGroup; }

		//{Position}
		public Action getPositionAction_0() { return cPositionAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Manager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSalaryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSalaryAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSalaryEIntParserRuleCall_3_1_0 = (RuleCall)cSalaryAssignment_3_1.eContents().get(0);
		private final Keyword cWorksOnKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWorks_onAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWorks_onPositionCrossReference_5_0 = (CrossReference)cWorks_onAssignment_5.eContents().get(0);
		private final RuleCall cWorks_onPositionEStringParserRuleCall_5_0_1 = (RuleCall)cWorks_onPositionCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Manager:
		//	"Manager" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Manager" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Manager"
		public Keyword getManagerKeyword_0() { return cManagerKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("salary" salary=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"salary"
		public Keyword getSalaryKeyword_3_0() { return cSalaryKeyword_3_0; }

		//salary=EInt
		public Assignment getSalaryAssignment_3_1() { return cSalaryAssignment_3_1; }

		//EInt
		public RuleCall getSalaryEIntParserRuleCall_3_1_0() { return cSalaryEIntParserRuleCall_3_1_0; }

		//"works on"
		public Keyword getWorksOnKeyword_4() { return cWorksOnKeyword_4; }

		//works_on=[Position|EString]
		public Assignment getWorks_onAssignment_5() { return cWorks_onAssignment_5; }

		//[Position|EString]
		public CrossReference getWorks_onPositionCrossReference_5_0() { return cWorks_onPositionCrossReference_5_0; }

		//EString
		public RuleCall getWorks_onPositionEStringParserRuleCall_5_0_1() { return cWorks_onPositionEStringParserRuleCall_5_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class Employee_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Employee_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmployeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSalaryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSalaryAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSalaryEIntParserRuleCall_3_1_0 = (RuleCall)cSalaryAssignment_3_1.eContents().get(0);
		private final Keyword cWorksOnKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWorks_onAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWorks_onPositionCrossReference_5_0 = (CrossReference)cWorks_onAssignment_5.eContents().get(0);
		private final RuleCall cWorks_onPositionEStringParserRuleCall_5_0_1 = (RuleCall)cWorks_onPositionCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Employee_Impl returns Employee:
		//	"Employee" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Employee" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Employee"
		public Keyword getEmployeeKeyword_0() { return cEmployeeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("salary" salary=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"salary"
		public Keyword getSalaryKeyword_3_0() { return cSalaryKeyword_3_0; }

		//salary=EInt
		public Assignment getSalaryAssignment_3_1() { return cSalaryAssignment_3_1; }

		//EInt
		public RuleCall getSalaryEIntParserRuleCall_3_1_0() { return cSalaryEIntParserRuleCall_3_1_0; }

		//"works on"
		public Keyword getWorksOnKeyword_4() { return cWorksOnKeyword_4; }

		//works_on=[Position|EString]
		public Assignment getWorks_onAssignment_5() { return cWorks_onAssignment_5; }

		//[Position|EString]
		public CrossReference getWorks_onPositionCrossReference_5_0() { return cWorks_onPositionCrossReference_5_0; }

		//EString
		public RuleCall getWorks_onPositionEStringParserRuleCall_5_0_1() { return cWorks_onPositionEStringParserRuleCall_5_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private ModelElements pModel;
	private EmployeeElements pEmployee;
	private CompanyElements pCompany;
	private DepartmentElements pDepartment;
	private PositionElements pPosition;
	private ManagerElements pManager;
	private Employee_ImplElements pEmployee_Impl;
	private EIntElements pEInt;
	private EStringElements pEString;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public IOIGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	"IOICompaniesModel" name=ID companies+=Company companies+=Company*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Employee:
	//	Employee_Impl | Manager;
	public EmployeeElements getEmployeeAccess() {
		return (pEmployee != null) ? pEmployee : (pEmployee = new EmployeeElements());
	}
	
	public ParserRule getEmployeeRule() {
		return getEmployeeAccess().getRule();
	}

	//Company:
	//	"Company" name=ID "{" "Positions:" "(" positions+=Position ("," positions+=Position)* ")" departments+=Department
	//	departments+=Department* "}";
	public CompanyElements getCompanyAccess() {
		return (pCompany != null) ? pCompany : (pCompany = new CompanyElements());
	}
	
	public ParserRule getCompanyRule() {
		return getCompanyAccess().getRule();
	}

	//Department:
	//	"Department" name=ID "{" manager=Manager employees+=Employee employees+=Employee* ("subdepartment"
	//	sub_department=Department)? "}";
	public DepartmentElements getDepartmentAccess() {
		return (pDepartment != null) ? pDepartment : (pDepartment = new DepartmentElements());
	}
	
	public ParserRule getDepartmentRule() {
		return getDepartmentAccess().getRule();
	}

	//Position:
	//	{Position} name=ID;
	public PositionElements getPositionAccess() {
		return (pPosition != null) ? pPosition : (pPosition = new PositionElements());
	}
	
	public ParserRule getPositionRule() {
		return getPositionAccess().getRule();
	}

	//Manager:
	//	"Manager" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}";
	public ManagerElements getManagerAccess() {
		return (pManager != null) ? pManager : (pManager = new ManagerElements());
	}
	
	public ParserRule getManagerRule() {
		return getManagerAccess().getRule();
	}

	//Employee_Impl returns Employee:
	//	"Employee" name=ID "{" ("salary" salary=EInt)? "works on" works_on=[Position|EString] "}";
	public Employee_ImplElements getEmployee_ImplAccess() {
		return (pEmployee_Impl != null) ? pEmployee_Impl : (pEmployee_Impl = new Employee_ImplElements());
	}
	
	public ParserRule getEmployee_ImplRule() {
		return getEmployee_ImplAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
