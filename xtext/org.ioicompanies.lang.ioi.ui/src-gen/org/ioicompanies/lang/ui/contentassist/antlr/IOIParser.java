/*
* generated by Xtext
*/
package org.ioicompanies.lang.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.ioicompanies.lang.services.IOIGrammarAccess;

public class IOIParser extends AbstractContentAssistParser {
	
	@Inject
	private IOIGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.ioicompanies.lang.ui.contentassist.antlr.internal.InternalIOIParser createParser() {
		org.ioicompanies.lang.ui.contentassist.antlr.internal.InternalIOIParser result = new org.ioicompanies.lang.ui.contentassist.antlr.internal.InternalIOIParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEmployeeAccess().getAlternatives(), "rule__Employee__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getCompanyAccess().getGroup(), "rule__Company__Group__0");
					put(grammarAccess.getCompanyAccess().getGroup_6(), "rule__Company__Group_6__0");
					put(grammarAccess.getDepartmentAccess().getGroup(), "rule__Department__Group__0");
					put(grammarAccess.getDepartmentAccess().getGroup_6(), "rule__Department__Group_6__0");
					put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
					put(grammarAccess.getManagerAccess().getGroup(), "rule__Manager__Group__0");
					put(grammarAccess.getManagerAccess().getGroup_3(), "rule__Manager__Group_3__0");
					put(grammarAccess.getEmployee_ImplAccess().getGroup(), "rule__Employee_Impl__Group__0");
					put(grammarAccess.getEmployee_ImplAccess().getGroup_3(), "rule__Employee_Impl__Group_3__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getCompaniesAssignment_2(), "rule__Model__CompaniesAssignment_2");
					put(grammarAccess.getModelAccess().getCompaniesAssignment_3(), "rule__Model__CompaniesAssignment_3");
					put(grammarAccess.getCompanyAccess().getNameAssignment_1(), "rule__Company__NameAssignment_1");
					put(grammarAccess.getCompanyAccess().getPositionsAssignment_5(), "rule__Company__PositionsAssignment_5");
					put(grammarAccess.getCompanyAccess().getPositionsAssignment_6_1(), "rule__Company__PositionsAssignment_6_1");
					put(grammarAccess.getCompanyAccess().getDepartmentsAssignment_8(), "rule__Company__DepartmentsAssignment_8");
					put(grammarAccess.getCompanyAccess().getDepartmentsAssignment_9(), "rule__Company__DepartmentsAssignment_9");
					put(grammarAccess.getDepartmentAccess().getNameAssignment_1(), "rule__Department__NameAssignment_1");
					put(grammarAccess.getDepartmentAccess().getManagerAssignment_3(), "rule__Department__ManagerAssignment_3");
					put(grammarAccess.getDepartmentAccess().getEmployeesAssignment_4(), "rule__Department__EmployeesAssignment_4");
					put(grammarAccess.getDepartmentAccess().getEmployeesAssignment_5(), "rule__Department__EmployeesAssignment_5");
					put(grammarAccess.getDepartmentAccess().getSub_departmentAssignment_6_1(), "rule__Department__Sub_departmentAssignment_6_1");
					put(grammarAccess.getPositionAccess().getNameAssignment_1(), "rule__Position__NameAssignment_1");
					put(grammarAccess.getManagerAccess().getNameAssignment_1(), "rule__Manager__NameAssignment_1");
					put(grammarAccess.getManagerAccess().getSalaryAssignment_3_1(), "rule__Manager__SalaryAssignment_3_1");
					put(grammarAccess.getManagerAccess().getWorks_onAssignment_5(), "rule__Manager__Works_onAssignment_5");
					put(grammarAccess.getEmployee_ImplAccess().getNameAssignment_1(), "rule__Employee_Impl__NameAssignment_1");
					put(grammarAccess.getEmployee_ImplAccess().getSalaryAssignment_3_1(), "rule__Employee_Impl__SalaryAssignment_3_1");
					put(grammarAccess.getEmployee_ImplAccess().getWorks_onAssignment_5(), "rule__Employee_Impl__Works_onAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.ioicompanies.lang.ui.contentassist.antlr.internal.InternalIOIParser typedParser = (org.ioicompanies.lang.ui.contentassist.antlr.internal.InternalIOIParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public IOIGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(IOIGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
