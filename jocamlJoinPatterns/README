== Intent ==

A JoCaml-based implementation that uses join patterns

== Languages ==

* [[Language:JoCaml]] 

== Technologies ==

* [[Technology:jocaml]] JoCaml interactive toplevel (Version 3.12)
* [[Technology:jocamlc]] JoCaml bytecode compiler (Version 3.12)
* [[Technology:GNU make]] GNU make utility
* [[Technology:diff]] file comparison

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Parallelism]]

== Motivation == 

Nowadays, event handling is a standard technique in GUI programming. However, 
there is a lot of research going on to use such an event-based approach for 
concurrent programming. The idea is to paralleize the handling of events by
combining simple events to more complex ones using so called join patterns. 
This project demonstrates the usage of event-handling concurrency in JoCaml 
using such join patterns.

== Architecture ==

* ''company.ml'' company structure
* ''company.mli'' header, company signature
* ''meganalysis.ml'' sample company
* ''main.ml'' simple test program

== Usage ==

You need to install JoCaml. 

Use the makefile for some demo:
* Enter ''make compile'' to compile the code
* Enter ''make test'' to execute the script contained in ''main.ml'' and to perform a simple diff-based test

== Contributors ==

* {{101contributor|Jan Baltzer|developer}}
