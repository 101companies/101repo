== Intent ==

[[in-memory XML processing]] with [[Technology:DOM]] in [[Language:Java]]

== Languages ==

* [[Language:XML]]
* [[Language:Java]]

== Technologies ==

* [[Technology:JAXP]]: implementation of DOM and other XML functionality
* [[101profile:Simple Java]]

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Serialization]]

== Motivation ==

Companies are represented in [[Language:XML]] and the object model of [[Technology:DOM]] is used to
represent and process XML documents [[In-memory XML processing|in memory]]. In particular, 
operations on companies are implemented in Java on top of DOM objects. Such objects are easily
queried---as needed for [[101feature:Total]]. DOM objects are also mutable---as needed for 
an [[Impure computation|impure]] implementation of [[101feature:Cut]].

== Illustration ==

Consider the following DOM-based implementation of ''cut'':

<syntaxhighlight lang="java">
public class Cut {
   public static void cut(Document doc) {
      NodeList nodelist = doc.getElementsByTagName("salary");
      for (int i=0; i<nodelist.getLength(); i++) {
         Element elem = (Element)nodelist.item(i);
         double value = parseDouble(elem.getTextContent());
         elem.setTextContent(Double.toString(value / 2));
      }
   }
}
</syntaxhighlight>

That is, the method receives an in-memory XML document which it queries with the
descendant axis (see ''getElementsByTagName'') so that all salary elements are collected
in a ''NodeList'' which is processed by a regular loop such that the text content
of each salary element is modified to reflect a cut in half.

== Usage ==

* The implementation is provided as an Eclipse project. 
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available in the package ''org.softlang.tests''.
** Run class ''Operations'' with JUnit to exercise basic operations.

== Issues ==

* DOM-based validation shall be demonstrated some day.

== Contributors ==

* {{101contributor|Ralf LÃ¤mmel|developer}}