== Intent ==

modular programming with [[:Category:static method]]s in [[Language:Java]]

== Languages ==

* [[Language:Java]] (Version 5)

== Technologies ==

* [[101profile:Simple Java]]

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Serialization]]

== Motivation ==

The present  implementation can be viewed as a variation on [[101implementation:javaComposition]]. 
Operations on companies are implemented as families of static methods in extra classes. 
This is straightforward '''if''' the operations are not polymorphic. 
This is necessarily the case for the given object model only uses object composition as opposed to 
class inheritance or interface polymorphism. 

== Illustration ==

A designated class with static methods for ''cut'' is defined as follows:

<syntaxhighlight lang="java">
public class Cut {
	public static void cut(Company that) {
		for (Department d : that.getDepts())
			cut(d);
	}	
	public static void cut(Department that) {
		cut(that.getManager());
		for (Department s : that.getSubdepts())
			cut(s);
		for (Employee e : that.getEmployees())
			cut(e);
	}	
	public static void cut(Employee that) {
		that.setSalary(that.getSalary() / 2);
	}	
}
</syntaxhighlight>

== Architecture ==

Package ''org.softlang.company'' hosts the object model for [[101feature:Company]]
and the general interfaces for void and returning visitors on companies, departments,
and employees. Package ''org.softlang.features'' hosts implementations of the basic 
operations [[101feature:Total]] and [[101feature:Cut]] as well as some boilerplate
code for [[101feature:Serialization]]. Package ''org.softlang.tests'' hosts JUnit tests; see below.

== Usage ==

* The implementation is provided as an Eclipse project. 
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available in the package ''org.softlang.tests''.
** Run class ''Basics'' with JUnit to exercise basic features.

The sample data is retrieved from the file ''sampleCompany.ser''.

The latter file was saved with [[101implementation:javaComposition]].

== Contributors ==

* {{101contributor|Ralf LÃ¤mmel|developer}}