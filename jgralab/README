== Intent ==

use [[Language:TGraphs]] with [[Technology:JGraLab]] in [[Language:Java]]

== Motivation ==

TGraphs are typed, attributed, ordered, and directed graphs.
TGraphs can be maintained in a repository and programmatically processed.
One can clearly use TGraphs to represent companies.
In fact, a TGraphs schema defines the structure of companies.
One can then use supplementary languages and technologies to query and transform such graphs 
so that typical operations on companies are implemented.
In particular, [[Technology:JGraLab]] supports Java-class generation from a TGraphs schema,
and query evaluation with [[Language:GReQL]] on TGraphs.
Transformations can be performed with [[Language:GReTL]]
or ''plain'' Java based on the schema-derived API.

== Languages ==

* [[Language:TGraphs]]
* [[Language:GReQL]]
* [[Language:GReTL]]
* [[Language:Java]]

== Technologies ==

* [[Technology:JGraLab]]: Java-based support for the TGraph technical space
* [[Technology:GReTL]]: the implementation of [[Language:GReTL]]
* [[Technology:JDK]]: provider of javac et al.
* [[Technology:JSE]]: execution platform (Version 1.6)
* [[Technology:Eclipse]]: optional IDE (Version 3.4.1)
* [[Technology:Ant]]: for building
* [[Technology:GraphViz]]: graph visualization

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Depth]]
* [[101feature:Mentoring]]
* [[101feature:Serialization]]
* [[101feature:Visualization]]

== Architecture ==

The file ''101companies-schema.xmi'' is the schema TGraph that represents the data
structure for companies. This file was exported from the
IBM Rational Software Architect (RSA) tool and is based on a simple UML class diagram.
The file ''101companies-schema.pdf'' illustrates the UML class diagram that was
modeled to represent the schema. The file ''101companies-schema.emx'' is the original IBM RSA model file.
Once generated, the file ''101companies-schema.tg''

The jgralab.jar contains the core technology for creating and operating on TGraphs.
It also contains the facilities for using GReQL. The gretl.jar contains GReTL for modifying TGraphs.

Package ''src.de.uni_koblenz.oneoonecompanies'' contains a programmer-defined
class ''CompanyServices'' that provides an API for several operations on TGraphs. 
Packages ''src.de.uni_koblenz.oneoonecompanies.schema'' and ''...schema.impl.std''
contain schema-derived interfaces and classes for companies.
	
== Usage ==

* The implementation is provided as an Eclipse project.
* If the TGraphs schema ''101companies-schema.xmi'' is ever changed, then code-generation must be re-executed. To this end, run ''ant'' on the included ''build.xml'' file from the command line or from within Eclipse. This process would re-generate all types in the packages ''...schema'' and ''...schema.impl.std''. These packages provide the API for ''CompanyServices''.
* There are JUnit tests in package ''...tests''. Run these tests to exercise all implemented operations and capabilities. GReQL queries and GReTL transformations are evaluated in due the process. One of the tests (namely the one for the visualization) is a main method.

== Discussion ==

Here are some minor issues that could be normalized/improved:
* Managers are employees definitely.
* Person not really needed (inheritance illustrated with NamedElement).
* Use float or double instead of ints for salaries.
* Mentors and mentees should be both employees.
* Enforce cardinality constraints for mentors:
** See [[101feature:Mentoring]].
** See prepared test testAddMentorNotOk.


== Contributors ==

* {{101contributor|Tassilo Horn|developer}}
* {{101contributor|Mahdi Derakhshanmanesh|developer}}
