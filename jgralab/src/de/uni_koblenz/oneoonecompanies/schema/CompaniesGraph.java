/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.oneoonecompanies.schema;

public interface CompaniesGraph extends de.uni_koblenz.jgralab.Graph {

	// ------------------------ Code for Company ------------------------

	/**
	 * @return the first Company vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Company getFirstCompany();

	/**
	 * Creates a new Company vertex in this graph.
	 *
	*/
	public de.uni_koblenz.oneoonecompanies.schema.Company createCompany();

	// ------------------------ Code for Department ------------------------

	/**
	 * @return the first Department vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Department getFirstDepartment();

	/**
	 * Creates a new Department vertex in this graph.
	 *
	*/
	public de.uni_koblenz.oneoonecompanies.schema.Department createDepartment();

	// ------------------------ Code for Employee ------------------------

	/**
	 * @return the first Employee vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Employee getFirstEmployee();

	/**
	 * Creates a new Employee vertex in this graph.
	 *
	*/
	public de.uni_koblenz.oneoonecompanies.schema.Employee createEmployee();

	// ------------------------ Code for HasDepartment ------------------------

	/**
	 * @return the first HasDepartment edge in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.HasDepartment getFirstHasDepartment();

	/**
	 * Creates a new HasDepartment edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.oneoonecompanies.schema.HasDepartment createHasDepartment(de.uni_koblenz.oneoonecompanies.schema.Company alpha, de.uni_koblenz.oneoonecompanies.schema.Department omega);

	// ------------------------ Code for HasEmployee ------------------------

	/**
	 * @return the first HasEmployee edge in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.HasEmployee getFirstHasEmployee();

	/**
	 * Creates a new HasEmployee edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.oneoonecompanies.schema.HasEmployee createHasEmployee(de.uni_koblenz.oneoonecompanies.schema.Department alpha, de.uni_koblenz.oneoonecompanies.schema.Person omega);

	// ------------------------ Code for HasSubDepartment ------------------------

	/**
	 * @return the first HasSubDepartment edge in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.HasSubDepartment getFirstHasSubDepartment();

	/**
	 * Creates a new HasSubDepartment edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.oneoonecompanies.schema.HasSubDepartment createHasSubDepartment(de.uni_koblenz.oneoonecompanies.schema.Department alpha, de.uni_koblenz.oneoonecompanies.schema.Department omega);

	// ------------------------ Code for Manager ------------------------

	/**
	 * @return the first Manager vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Manager getFirstManager();

	/**
	 * Creates a new Manager vertex in this graph.
	 *
	*/
	public de.uni_koblenz.oneoonecompanies.schema.Manager createManager();

	// ------------------------ Code for Mentors ------------------------

	/**
	 * @return the first Mentors edge in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Mentors getFirstMentors();

	/**
	 * Creates a new Mentors edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.oneoonecompanies.schema.Mentors createMentors(de.uni_koblenz.oneoonecompanies.schema.Person alpha, de.uni_koblenz.oneoonecompanies.schema.Employee omega);

	// ------------------------ Code for NamedElement ------------------------

	/**
	 * @return the first NamedElement vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.NamedElement getFirstNamedElement();

	// ------------------------ Code for Person ------------------------

	/**
	 * @return the first Person vertex in this graph
	 */
	public de.uni_koblenz.oneoonecompanies.schema.Person getFirstPerson();

	/**
	 * @return an Iterable for all edges of this graph that are of type HasDepartment or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.HasDepartment> getHasDepartmentEdges();
	

	/**
	 * @return an Iterable for all edges of this graph that are of type Mentors or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Mentors> getMentorsEdges();
	

	/**
	 * @return an Iterable for all edges of this graph that are of type HasEmployee or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.HasEmployee> getHasEmployeeEdges();
	

	/**
	 * @return an Iterable for all edges of this graph that are of type HasSubDepartment or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.HasSubDepartment> getHasSubDepartmentEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type NamedElement or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.NamedElement> getNamedElementVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Company or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Company> getCompanyVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Person or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Person> getPersonVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Manager or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Manager> getManagerVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Department or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Department> getDepartmentVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Employee or subtypes.
	 */
	public Iterable<de.uni_koblenz.oneoonecompanies.schema.Employee> getEmployeeVertices();
	
}
