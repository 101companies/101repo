== Intent ==

parsing textual syntax with [[Technology:ANTLR]]

== Features ==

* [[101feature:Company]] 
* [[101feature:Parsing]] 

== Languages ==

* [[Language:Java]]

== Technologies ==

* [[Technology:ANTLR]]

== Motivation ==

A parser for a concrete syntax of companies is provided.
The parser translates text into company objects.
To this end, a straightforward object model for companies is used.
The mapping is described by the semantic actions within the ANTLR-based parser description.

== Illustration ==



<syntaxhighlight lang="antlr">
dept :
  'department' STRING '{' 
    ('manager' employee)
    ('employee' employee)* 
    dept*
  '}';
</syntaxhighlight>

<syntaxhighlight lang="antlr">
dept returns [Department d]:
  { $d = new Department(); }
  'department' name=STRING
  { $d.setName($STRING.text); } 
  '{'
    'manager' m=employee
    { $d.setManager($m.e); }
    ( 'employee' e=employee
      { $d.getEmployees().add($e.e); }
    )*
    ( sub=dept
      { $d.getSubdepts().add($sub.d); }
    )*
  '}'
  ;
</syntaxhighlight>

== Architecture ==

See [[101implementation:antlr]] for general instructions on the architecture of ANTLR-based implementations.
The object model for companies with methods for the basic operations is adopted from [[101implementation:java]].
(Serialization capabilities are not included though.)

== Usage ==

See [[101implementation:antlr]] for general instructions on the usage of ANTLR-based implementations.

== Contributors ==

* {{101contributor|Ralf LÃ¤mmel|developer}}
