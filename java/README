== Summary ==

a simple implementation in Java

== Technologies ==

* [[Technology:Eclipse]]: IDE for building and running implementation (Version 3.4.1)
* [[Technology:Java JDK Compiler]]: Java compiler used within Eclipse (Compliance level 1.6)
* [[Technology:JSE]]: Java platform (Version 1.6)
* [[Technology:JUnit]]: Used for automated testing (Version 4)

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Serialization]]

== Motivation ==

Basic style of [[OO programming]] is applied. A simple [[object model]]
for companies is provided with virtual methods to implement the [[query]] for
totaling salaries and the [[:Category:transformation]] for cutting
salaries. Basic [[serialization]] in the sense of [[Technology:Object Streams]] 
is enabled by means of the [[Marker interface pattern|marker interface]]
''Serializable'', which is applied to the classes of the object model 
for companies.

These are POJOs plus instance methods for some of the scenarios.
We also enable object [[serialization]] for the object model.
To this end, the class implement the empty interface Serializable.

== Architecture ==

Package ''org.softlang.company'' hosts the object model for [[101feature:Company]] 
with the virtual methods for [[101feature:Total]] and [[101feature:Cut]]. Some 
boilerplate code for [[101feature:Serialization]] is implemented in the class 
''org.softlang.company.Company'' (see methods ''readObject'' and ''writeObject'').
Package ''org.softlang.java.tests'' hosts JUnit tests; see below.

== Usage ==

* The implementation is provided as an Eclipse project.
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available as the package ''org.softlang.java.tests''.
** Run class Basics with JUnit to exercise basic features.
** Run class Serialization with JUnit to exercise serialization.

== Contributors ==

* [[Contributor:Ralf LÃ¤mmel]]
* [[Contributor:Thomas Schmorleiz]]
* [[Contributor:Betim Sojeva]]
