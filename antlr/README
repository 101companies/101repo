== Intent ==

define a concrete textual syntax for companies using [[Technology:ANTLR]]

== Motivation ==

We define a concrete syntax for companies.
We use ANTLR to execute that syntax in an acceptor-like manner.

== Features ==

* [[101feature:Company]] 
* [[101feature:Parsing]] 

== Languages ==

* [[Language:Java]]

== Technologies ==

* [[Technology:ANTLR]]

== Usage ==

See the Tests class for test cases.

The Antlr tool (including parser generator and runtime) is included into the project.
There is a Makefile at the top of the project and within the org.softlang.antlr package.
Run "make" at either of these locations to re-generate the parser.
Refresh the project in Eclipse if you re-generated outside Eclipse.
In this manner, the parser is compiled.

You may also use an ANTLR IDE.
http://antlrv3ide.sourceforge.net/

Just for fun, here is the signature corresponding to the grammar.

Introduced sorts
 Company,
 Dept,
 Employee
 
Assumed sorts
 Float,
 String,
 List(_)
 
Function symbols:
 company  : List(Dept) -> Company
 dept     : String x Employee x List(Employee) x List(Dept) -> Dept
 employee : String x String x Float -> Employee
 
 Notes:
 - We allow ourselves lists.

== Contributors ==

* {{101contributor|Ralf LÃ¤mmel|developer}}
