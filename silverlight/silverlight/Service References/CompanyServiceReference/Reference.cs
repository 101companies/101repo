//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.454
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace silverlight.CompanyServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDto", Namespace="http://schemas.datacontract.org/2004/07/wcf.Dto")]
    public partial class CompanyDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.DepartmentDto> DepartmentsField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private decimal TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.DepartmentDto> Departments {
            get {
                return this.DepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentsField, value) != true)) {
                    this.DepartmentsField = value;
                    this.RaisePropertyChanged("Departments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentDto", Namespace="http://schemas.datacontract.org/2004/07/wcf.Dto")]
    public partial class DepartmentDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.EmployeeDto> EmployeesField;
        
        private System.Guid IdField;
        
        private silverlight.CompanyServiceReference.EmployeeDto ManagerField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.DepartmentDto> SubDepartmentsField;
        
        private decimal TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.EmployeeDto> Employees {
            get {
                return this.EmployeesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeesField, value) != true)) {
                    this.EmployeesField = value;
                    this.RaisePropertyChanged("Employees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public silverlight.CompanyServiceReference.EmployeeDto Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<silverlight.CompanyServiceReference.DepartmentDto> SubDepartments {
            get {
                return this.SubDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubDepartmentsField, value) != true)) {
                    this.SubDepartmentsField = value;
                    this.RaisePropertyChanged("SubDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDto", Namespace="http://schemas.datacontract.org/2004/07/wcf.Dto")]
    public partial class EmployeeDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private decimal SalaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyServiceReference.ICompanyService")]
    public interface ICompanyService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/GetCompany", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyResponse")]
        System.IAsyncResult BeginGetCompany(System.AsyncCallback callback, object asyncState);
        
        silverlight.CompanyServiceReference.CompanyDto EndGetCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/GetDepartment", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentResponse")]
        System.IAsyncResult BeginGetDepartment(string id, System.AsyncCallback callback, object asyncState);
        
        silverlight.CompanyServiceReference.DepartmentDto EndGetDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/GetEmployee", ReplyAction="http://tempuri.org/ICompanyService/GetEmployeeResponse")]
        System.IAsyncResult BeginGetEmployee(string id, System.AsyncCallback callback, object asyncState);
        
        silverlight.CompanyServiceReference.EmployeeDto EndGetEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/CutDept", ReplyAction="http://tempuri.org/ICompanyService/CutDeptResponse")]
        System.IAsyncResult BeginCutDept(silverlight.CompanyServiceReference.DepartmentDto dept, System.AsyncCallback callback, object asyncState);
        
        decimal EndCutDept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/CutEmpl", ReplyAction="http://tempuri.org/ICompanyService/CutEmplResponse")]
        System.IAsyncResult BeginCutEmpl(silverlight.CompanyServiceReference.EmployeeDto emp, System.AsyncCallback callback, object asyncState);
        
        decimal EndCutEmpl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICompanyService/Cut", ReplyAction="http://tempuri.org/ICompanyService/CutResponse")]
        System.IAsyncResult BeginCut(silverlight.CompanyServiceReference.CompanyDto company, System.AsyncCallback callback, object asyncState);
        
        decimal EndCut(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyServiceChannel : silverlight.CompanyServiceReference.ICompanyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public silverlight.CompanyServiceReference.CompanyDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((silverlight.CompanyServiceReference.CompanyDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public silverlight.CompanyServiceReference.DepartmentDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((silverlight.CompanyServiceReference.DepartmentDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public silverlight.CompanyServiceReference.EmployeeDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((silverlight.CompanyServiceReference.EmployeeDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CutDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CutDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CutEmplCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CutEmplCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyServiceClient : System.ServiceModel.ClientBase<silverlight.CompanyServiceReference.ICompanyService>, silverlight.CompanyServiceReference.ICompanyService {
        
        private BeginOperationDelegate onBeginGetCompanyDelegate;
        
        private EndOperationDelegate onEndGetCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartmentDelegate;
        
        private EndOperationDelegate onEndGetDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeDelegate;
        
        private EndOperationDelegate onEndGetEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCutDeptDelegate;
        
        private EndOperationDelegate onEndCutDeptDelegate;
        
        private System.Threading.SendOrPostCallback onCutDeptCompletedDelegate;
        
        private BeginOperationDelegate onBeginCutEmplDelegate;
        
        private EndOperationDelegate onEndCutEmplDelegate;
        
        private System.Threading.SendOrPostCallback onCutEmplCompletedDelegate;
        
        private BeginOperationDelegate onBeginCutDelegate;
        
        private EndOperationDelegate onEndCutDelegate;
        
        private System.Threading.SendOrPostCallback onCutCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CompanyServiceClient() {
        }
        
        public CompanyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCompanyCompletedEventArgs> GetCompanyCompleted;
        
        public event System.EventHandler<GetDepartmentCompletedEventArgs> GetDepartmentCompleted;
        
        public event System.EventHandler<GetEmployeeCompletedEventArgs> GetEmployeeCompleted;
        
        public event System.EventHandler<CutDeptCompletedEventArgs> CutDeptCompleted;
        
        public event System.EventHandler<CutEmplCompletedEventArgs> CutEmplCompleted;
        
        public event System.EventHandler<CutCompletedEventArgs> CutCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginGetCompany(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompany(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        silverlight.CompanyServiceReference.CompanyDto silverlight.CompanyServiceReference.ICompanyService.EndGetCompany(System.IAsyncResult result) {
            return base.Channel.EndGetCompany(result);
        }
        
        private System.IAsyncResult OnBeginGetCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginGetCompany(callback, asyncState);
        }
        
        private object[] OnEndGetCompany(System.IAsyncResult result) {
            silverlight.CompanyServiceReference.CompanyDto retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndGetCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyCompleted(object state) {
            if ((this.GetCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyCompleted(this, new GetCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyAsync() {
            this.GetCompanyAsync(null);
        }
        
        public void GetCompanyAsync(object userState) {
            if ((this.onBeginGetCompanyDelegate == null)) {
                this.onBeginGetCompanyDelegate = new BeginOperationDelegate(this.OnBeginGetCompany);
            }
            if ((this.onEndGetCompanyDelegate == null)) {
                this.onEndGetCompanyDelegate = new EndOperationDelegate(this.OnEndGetCompany);
            }
            if ((this.onGetCompanyCompletedDelegate == null)) {
                this.onGetCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyDelegate, null, this.onEndGetCompanyDelegate, this.onGetCompanyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginGetDepartment(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartment(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        silverlight.CompanyServiceReference.DepartmentDto silverlight.CompanyServiceReference.ICompanyService.EndGetDepartment(System.IAsyncResult result) {
            return base.Channel.EndGetDepartment(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginGetDepartment(id, callback, asyncState);
        }
        
        private object[] OnEndGetDepartment(System.IAsyncResult result) {
            silverlight.CompanyServiceReference.DepartmentDto retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndGetDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartmentCompleted(object state) {
            if ((this.GetDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartmentCompleted(this, new GetDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartmentAsync(string id) {
            this.GetDepartmentAsync(id, null);
        }
        
        public void GetDepartmentAsync(string id, object userState) {
            if ((this.onBeginGetDepartmentDelegate == null)) {
                this.onBeginGetDepartmentDelegate = new BeginOperationDelegate(this.OnBeginGetDepartment);
            }
            if ((this.onEndGetDepartmentDelegate == null)) {
                this.onEndGetDepartmentDelegate = new EndOperationDelegate(this.OnEndGetDepartment);
            }
            if ((this.onGetDepartmentCompletedDelegate == null)) {
                this.onGetDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartmentDelegate, new object[] {
                        id}, this.onEndGetDepartmentDelegate, this.onGetDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginGetEmployee(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployee(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        silverlight.CompanyServiceReference.EmployeeDto silverlight.CompanyServiceReference.ICompanyService.EndGetEmployee(System.IAsyncResult result) {
            return base.Channel.EndGetEmployee(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginGetEmployee(id, callback, asyncState);
        }
        
        private object[] OnEndGetEmployee(System.IAsyncResult result) {
            silverlight.CompanyServiceReference.EmployeeDto retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndGetEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeCompleted(object state) {
            if ((this.GetEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeCompleted(this, new GetEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeAsync(string id) {
            this.GetEmployeeAsync(id, null);
        }
        
        public void GetEmployeeAsync(string id, object userState) {
            if ((this.onBeginGetEmployeeDelegate == null)) {
                this.onBeginGetEmployeeDelegate = new BeginOperationDelegate(this.OnBeginGetEmployee);
            }
            if ((this.onEndGetEmployeeDelegate == null)) {
                this.onEndGetEmployeeDelegate = new EndOperationDelegate(this.OnEndGetEmployee);
            }
            if ((this.onGetEmployeeCompletedDelegate == null)) {
                this.onGetEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeDelegate, new object[] {
                        id}, this.onEndGetEmployeeDelegate, this.onGetEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginCutDept(silverlight.CompanyServiceReference.DepartmentDto dept, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCutDept(dept, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal silverlight.CompanyServiceReference.ICompanyService.EndCutDept(System.IAsyncResult result) {
            return base.Channel.EndCutDept(result);
        }
        
        private System.IAsyncResult OnBeginCutDept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            silverlight.CompanyServiceReference.DepartmentDto dept = ((silverlight.CompanyServiceReference.DepartmentDto)(inValues[0]));
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginCutDept(dept, callback, asyncState);
        }
        
        private object[] OnEndCutDept(System.IAsyncResult result) {
            decimal retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndCutDept(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCutDeptCompleted(object state) {
            if ((this.CutDeptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CutDeptCompleted(this, new CutDeptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CutDeptAsync(silverlight.CompanyServiceReference.DepartmentDto dept) {
            this.CutDeptAsync(dept, null);
        }
        
        public void CutDeptAsync(silverlight.CompanyServiceReference.DepartmentDto dept, object userState) {
            if ((this.onBeginCutDeptDelegate == null)) {
                this.onBeginCutDeptDelegate = new BeginOperationDelegate(this.OnBeginCutDept);
            }
            if ((this.onEndCutDeptDelegate == null)) {
                this.onEndCutDeptDelegate = new EndOperationDelegate(this.OnEndCutDept);
            }
            if ((this.onCutDeptCompletedDelegate == null)) {
                this.onCutDeptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCutDeptCompleted);
            }
            base.InvokeAsync(this.onBeginCutDeptDelegate, new object[] {
                        dept}, this.onEndCutDeptDelegate, this.onCutDeptCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginCutEmpl(silverlight.CompanyServiceReference.EmployeeDto emp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCutEmpl(emp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal silverlight.CompanyServiceReference.ICompanyService.EndCutEmpl(System.IAsyncResult result) {
            return base.Channel.EndCutEmpl(result);
        }
        
        private System.IAsyncResult OnBeginCutEmpl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            silverlight.CompanyServiceReference.EmployeeDto emp = ((silverlight.CompanyServiceReference.EmployeeDto)(inValues[0]));
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginCutEmpl(emp, callback, asyncState);
        }
        
        private object[] OnEndCutEmpl(System.IAsyncResult result) {
            decimal retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndCutEmpl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCutEmplCompleted(object state) {
            if ((this.CutEmplCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CutEmplCompleted(this, new CutEmplCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CutEmplAsync(silverlight.CompanyServiceReference.EmployeeDto emp) {
            this.CutEmplAsync(emp, null);
        }
        
        public void CutEmplAsync(silverlight.CompanyServiceReference.EmployeeDto emp, object userState) {
            if ((this.onBeginCutEmplDelegate == null)) {
                this.onBeginCutEmplDelegate = new BeginOperationDelegate(this.OnBeginCutEmpl);
            }
            if ((this.onEndCutEmplDelegate == null)) {
                this.onEndCutEmplDelegate = new EndOperationDelegate(this.OnEndCutEmpl);
            }
            if ((this.onCutEmplCompletedDelegate == null)) {
                this.onCutEmplCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCutEmplCompleted);
            }
            base.InvokeAsync(this.onBeginCutEmplDelegate, new object[] {
                        emp}, this.onEndCutEmplDelegate, this.onCutEmplCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult silverlight.CompanyServiceReference.ICompanyService.BeginCut(silverlight.CompanyServiceReference.CompanyDto company, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCut(company, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal silverlight.CompanyServiceReference.ICompanyService.EndCut(System.IAsyncResult result) {
            return base.Channel.EndCut(result);
        }
        
        private System.IAsyncResult OnBeginCut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            silverlight.CompanyServiceReference.CompanyDto company = ((silverlight.CompanyServiceReference.CompanyDto)(inValues[0]));
            return ((silverlight.CompanyServiceReference.ICompanyService)(this)).BeginCut(company, callback, asyncState);
        }
        
        private object[] OnEndCut(System.IAsyncResult result) {
            decimal retVal = ((silverlight.CompanyServiceReference.ICompanyService)(this)).EndCut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCutCompleted(object state) {
            if ((this.CutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CutCompleted(this, new CutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CutAsync(silverlight.CompanyServiceReference.CompanyDto company) {
            this.CutAsync(company, null);
        }
        
        public void CutAsync(silverlight.CompanyServiceReference.CompanyDto company, object userState) {
            if ((this.onBeginCutDelegate == null)) {
                this.onBeginCutDelegate = new BeginOperationDelegate(this.OnBeginCut);
            }
            if ((this.onEndCutDelegate == null)) {
                this.onEndCutDelegate = new EndOperationDelegate(this.OnEndCut);
            }
            if ((this.onCutCompletedDelegate == null)) {
                this.onCutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCutCompleted);
            }
            base.InvokeAsync(this.onBeginCutDelegate, new object[] {
                        company}, this.onEndCutDelegate, this.onCutCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override silverlight.CompanyServiceReference.ICompanyService CreateChannel() {
            return new CompanyServiceClientChannel(this);
        }
        
        private class CompanyServiceClientChannel : ChannelBase<silverlight.CompanyServiceReference.ICompanyService>, silverlight.CompanyServiceReference.ICompanyService {
            
            public CompanyServiceClientChannel(System.ServiceModel.ClientBase<silverlight.CompanyServiceReference.ICompanyService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCompany(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompany", _args, callback, asyncState);
                return _result;
            }
            
            public silverlight.CompanyServiceReference.CompanyDto EndGetCompany(System.IAsyncResult result) {
                object[] _args = new object[0];
                silverlight.CompanyServiceReference.CompanyDto _result = ((silverlight.CompanyServiceReference.CompanyDto)(base.EndInvoke("GetCompany", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepartment(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public silverlight.CompanyServiceReference.DepartmentDto EndGetDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                silverlight.CompanyServiceReference.DepartmentDto _result = ((silverlight.CompanyServiceReference.DepartmentDto)(base.EndInvoke("GetDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployee(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public silverlight.CompanyServiceReference.EmployeeDto EndGetEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                silverlight.CompanyServiceReference.EmployeeDto _result = ((silverlight.CompanyServiceReference.EmployeeDto)(base.EndInvoke("GetEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCutDept(silverlight.CompanyServiceReference.DepartmentDto dept, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dept;
                System.IAsyncResult _result = base.BeginInvoke("CutDept", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndCutDept(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("CutDept", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCutEmpl(silverlight.CompanyServiceReference.EmployeeDto emp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = emp;
                System.IAsyncResult _result = base.BeginInvoke("CutEmpl", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndCutEmpl(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("CutEmpl", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCut(silverlight.CompanyServiceReference.CompanyDto company, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = company;
                System.IAsyncResult _result = base.BeginInvoke("Cut", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndCut(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("Cut", _args, result)));
                return _result;
            }
        }
    }
}
