== Intent ==

a simple implementation in [[Language:Java]]

== Implementations ==

See [[101implementation:java]] for a variation on the present implementation 
which uses [[class inheritance]] instead of [[object composition]].

== Languages ==

* [[Language:Java]]

== Technologies ==

* [[Technology:JDK]]: provider of javac et al.
* [[Technology:JSE]]: execution platform (Version 1.6)
* [[Technology:JUnit]]: automated testing support (Version 4)
* [[Technology:Eclipse]]: optional IDE (Version 3.4.1)

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Serialization]]

== Motivation ==

Basic style of [[OO programming]] is applied. A simple [[object model]]
for companies is provided. [[Object composition]] is put to work to 
compose companies, and nested departments. Methods implement a [[query]] 
for totaling salaries and a [[:Category:transformation]] for cutting salaries/
Since [[class inheritance]] is not used, and, in fact, no [[subtype polymorphism]] 
is used whatsoever, no [[virtual method]]s are needed for the query and
the transformation. Instead, a collection of static methods an be used.
Basic [[serialization]] in the sense of [[Technology:Object Streams]] is 
enabled by means of the [[Marker interface pattern|marker interface]] 
''Serializable'', which is applied to the [[:Category:class]]es of the 
object model for companies.

== Architecture ==

Package ''org.softlang.company'' hosts the object model for [[101feature:Company]].
Package ''org.softlang.java'' hosts designated classes with static methods for
[[101feature:Total]] and [[101feature:Cut]]. Some boilerplate code for 
[[101feature:Serialization]] is implemented in the class ''org.softlang.company.Company'' 
(see methods ''readObject'' and ''writeObject''). Package ''org.softlang.java.tests'' 
hosts JUnit tests; see below.

== Usage ==

* The implementation is provided as an Eclipse project.
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available as the package ''org.softlang.java.tests''.
** Run class Basics with JUnit to exercise basic features.
** Run class Serialization with JUnit to exercise serialization.

== Contributors ==

* [[Contributor:Ralf LÃ¤mmel]]
* [[Contributor:Thomas Schmorleiz]]
* [[Contributor:Betim Sojeva]]
