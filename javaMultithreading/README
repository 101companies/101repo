== Intent ==

Multithreading implementation in [[Language:Java]].

== Languages ==

* [[Language:Java]] (Version 5)

== Technologies ==

* [[Technology:Multithreading]]
* [[101profile:Simple Java|Simple Java]]

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]

== Motivation ==

''This project was created at the PTT-Hackathon 2011.''

Multithreading grants simultaneously executed multiple access to the [[101companies:System]]. This is usefull for multiclient-applications, in which it is possible to initiate different changes at the same time. The project uses the [[Technology:Monitor|monitor]]-concept of [[Language:Java]].

== Illustration ==

== Architecture ==

Package ''org.softlang.company'' hosts the object model for [[101feature:Company]]. The methods for [[101feature:Total]] and [[101feature:Cut]] are implemented as classes named Actions and hosted in ''org.softlang.action''. They implement the basic Action
interface [this!!src/org/softlang/action/Action.java]. These can be used with a descendant of the interface Context hosted in ''org.softlang.context''. There are two implementations: [this!!src/org/softlang/context/ConcurrentContext.java] and [this!!src/org/softlang/context/SequentialContext.java].  The methods should be called with [this!!src/org/softlang/context/CompanyContextManager.java], which organizes the call on all direct connected departments. The class [this!!src/org/softlang/tests/CompanyCreator.java] ensures adequate large companies for testing to (hopefully) see the boost of multithreading. There is an internal timeout if we have a [this!!src/org/softlang/action/TotalAction.java] to ensure all threads are finished before returning the result;

== Usage ==

* The implementation is provided as an Eclipse project. 
* Hence, open the project with Eclipse; this will also build the project.
* There are JUnit tests available in the package ''org.softlang.tests''.
** Run class ''Basics'' with JUnit to exercise basic features and ensure working of CompanyCreator.
** Run class ''Threads'' with JUnit to exercise threading.

== Contributors ==

* {{101contributor|Christian Schl√∂ffel|developer}}
* {{101contributor|Johann Tissen|developer}}
* {{101contributor|Rebecca Bindarra|developer}}
* {{101contributor|Tobias Schmidt|developer}}
* {{101contributor|Tobias Zimmer|reviewer}}