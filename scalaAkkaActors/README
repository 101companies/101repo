== Intent ==

This is an implementation of the basic spec using [[Language:Scala]] together with the [[Technology:Akka]] toolkit's actor library as well as Akka's Typed Actors.

== Languages ==

* [[Languages:Scala]]

== Technologies ==

* [[Technology:Scala]] The Scala compiler and runtime library (Version 2.9.0.1)
* [[Technology:Akka]] Akka concurrency toolkit (Version 1.1.3)
* [[Technology:sbt]] Simple Build Tool - a build tool for Scala projects (Version 0.10)
* [[Technology:specs2]] A library for BDD and unit testing in Scala (Version 1.4)

== Motivation ==

This implementation uses Akka to show how a strong, static type system can serve to type check the inherently dynamic actor pattern by encapsulating actors behind typesafe proxy interfaces.

== Features ==

* [[101feature:Company]]
* [[101feature:Total]]
* [[101feature:Cut]]
* [[101feature:Parallelism]] (inherent to the implementation)

== Architecture ==

In ''Company.scala'' a regular Akka actor-based implementation is given as a reference. ''TypedCompany.scala'' shows how the message passing is hidden behind traits that provide a front from which Akka can construct a proxy object to interact with.

== Usage ==

This implementation uses sbt 0.10 as build tool, available at [http://github.com/harrah/xsbt/]. After installing sbt just change into the project directory and run
 <nowiki>sbt</nowiki>
to create the project, followed by
 <nowiki>sbt update</nowiki>
This should fetch any needed dependencies. After that you can compile the project by typing
 <nowiki>sbt compile</nowiki>
and then
 <nowiki>sbt test</nowiki>
to run the tests.

== Issues ==

Akka is currently transitioning to version 2.0 which radically changes and simplifies the implementation of TypedActors. Upon release of Akka 2.0, a revision of this implementation is to be scheduled.

== Contributors ==

* {{101contributor|Sebastian Jackel|developer}}
