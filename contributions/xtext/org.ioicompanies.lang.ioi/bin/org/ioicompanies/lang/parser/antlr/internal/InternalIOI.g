/*
* generated by Xtext
*/
grammar InternalIOI;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.ioicompanies.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ioicompanies.lang.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ioicompanies.lang.services.IOIGrammarAccess;

}

@parser::members {

 	private IOIGrammarAccess grammarAccess;
 	
    public InternalIOIParser(TokenStream input, IOIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected IOIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IOICompaniesModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getIOICompaniesModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getCompaniesCompanyParserRuleCall_2_0()); 
	    }
		lv_companies_2_0=ruleCompany		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"companies",
        		lv_companies_2_0, 
        		"Company");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getCompaniesCompanyParserRuleCall_3_0()); 
	    }
		lv_companies_3_0=ruleCompany		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"companies",
        		lv_companies_3_0, 
        		"Company");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	 iv_ruleEmployee=ruleEmployee 
	 { $current=$iv_ruleEmployee.current; } 
	 EOF 
;

// Rule Employee
ruleEmployee returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEmployeeAccess().getEmployee_ImplParserRuleCall_0()); 
    }
    this_Employee_Impl_0=ruleEmployee_Impl
    { 
        $current = $this_Employee_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEmployeeAccess().getManagerParserRuleCall_1()); 
    }
    this_Manager_1=ruleManager
    { 
        $current = $this_Manager_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompany
entryRuleCompany returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompanyRule()); }
	 iv_ruleCompany=ruleCompany 
	 { $current=$iv_ruleCompany.current; } 
	 EOF 
;

// Rule Company
ruleCompany returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Company' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompanyAccess().getCompanyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompanyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Positions:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompanyAccess().getPositionsKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCompanyAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompanyAccess().getPositionsPositionParserRuleCall_5_0()); 
	    }
		lv_positions_5_0=rulePosition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompanyRule());
	        }
       		add(
       			$current, 
       			"positions",
        		lv_positions_5_0, 
        		"Position");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompanyAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompanyAccess().getPositionsPositionParserRuleCall_6_1_0()); 
	    }
		lv_positions_7_0=rulePosition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompanyRule());
	        }
       		add(
       			$current, 
       			"positions",
        		lv_positions_7_0, 
        		"Position");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompanyAccess().getRightParenthesisKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompanyAccess().getDepartmentsDepartmentParserRuleCall_8_0()); 
	    }
		lv_departments_9_0=ruleDepartment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompanyRule());
	        }
       		add(
       			$current, 
       			"departments",
        		lv_departments_9_0, 
        		"Department");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompanyAccess().getDepartmentsDepartmentParserRuleCall_9_0()); 
	    }
		lv_departments_10_0=ruleDepartment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompanyRule());
	        }
       		add(
       			$current, 
       			"departments",
        		lv_departments_10_0, 
        		"Department");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleDepartment
entryRuleDepartment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDepartmentRule()); }
	 iv_ruleDepartment=ruleDepartment 
	 { $current=$iv_ruleDepartment.current; } 
	 EOF 
;

// Rule Department
ruleDepartment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Department' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDepartmentAccess().getDepartmentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDepartmentAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDepartmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDepartmentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getManagerManagerParserRuleCall_3_0()); 
	    }
		lv_manager_3_0=ruleManager		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		set(
       			$current, 
       			"manager",
        		lv_manager_3_0, 
        		"Manager");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getEmployeesEmployeeParserRuleCall_4_0()); 
	    }
		lv_employees_4_0=ruleEmployee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		add(
       			$current, 
       			"employees",
        		lv_employees_4_0, 
        		"Employee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getEmployeesEmployeeParserRuleCall_5_0()); 
	    }
		lv_employees_5_0=ruleEmployee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		add(
       			$current, 
       			"employees",
        		lv_employees_5_0, 
        		"Employee");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_6='subdepartment' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDepartmentAccess().getSubdepartmentKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getSub_departmentDepartmentParserRuleCall_6_1_0()); 
	    }
		lv_sub_department_7_0=ruleDepartment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		set(
       			$current, 
       			"sub_department",
        		lv_sub_department_7_0, 
        		"Department");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDepartmentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	 iv_rulePosition=rulePosition 
	 { $current=$iv_rulePosition.current; } 
	 EOF 
;

// Rule Position
rulePosition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPositionAccess().getPositionAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPositionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleManager
entryRuleManager returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManagerRule()); }
	 iv_ruleManager=ruleManager 
	 { $current=$iv_ruleManager.current; } 
	 EOF 
;

// Rule Manager
ruleManager returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Manager' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getManagerAccess().getManagerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getManagerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getManagerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getManagerAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='salary' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getManagerAccess().getSalaryKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getManagerAccess().getSalaryEIntParserRuleCall_3_1_0()); 
	    }
		lv_salary_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManagerRule());
	        }
       		set(
       			$current, 
       			"salary",
        		lv_salary_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='works on' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getManagerAccess().getWorksOnKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getManagerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getManagerAccess().getWorks_onPositionCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getManagerAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEmployee_Impl
entryRuleEmployee_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmployee_ImplRule()); }
	 iv_ruleEmployee_Impl=ruleEmployee_Impl 
	 { $current=$iv_ruleEmployee_Impl.current; } 
	 EOF 
;

// Rule Employee_Impl
ruleEmployee_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Employee' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmployee_ImplAccess().getEmployeeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEmployee_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployee_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmployee_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='salary' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEmployee_ImplAccess().getSalaryKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmployee_ImplAccess().getSalaryEIntParserRuleCall_3_1_0()); 
	    }
		lv_salary_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmployee_ImplRule());
	        }
       		set(
       			$current, 
       			"salary",
        		lv_salary_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='works on' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEmployee_ImplAccess().getWorksOnKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployee_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEmployee_ImplAccess().getWorks_onPositionCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEmployee_ImplAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


