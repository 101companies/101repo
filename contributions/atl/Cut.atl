-- @path Company=/atl/Company.ecore

module Cut;

create OUT: Company from IN: Company;

rule Company2Company {
	from
	 s : Company!Company 
	to
	 t : Company!Company (
	   depts <- s.depts 	
	 )
	  
}

rule Dept2Dept {
	from
	 s : Company!Dept 
	to 
	 t : Company!Dept (
	   name <- s.name,
	   manager <- s.manager,
	   subunits <- s.subunits
	 )
	 
}

helper context Company!Subunit def: isPu() : Boolean =
	not self.pu.oclIsUndefined();

rule Subunit2Subunit_Pu {
	from
	 s : Company!Subunit (s.isPu())
	to
	 t : Company!Subunit (
	   pu <- s.pu
	 )
}

rule Subunit2Subunit_Du {
	from
	 s : Company!Subunit (not s.isPu())
	to 
	 t : Company!Subunit (
	   du <- s.du
	 )
}


rule Employee2Employee {
	from
	 s : Company!Employee 
	to
	 t : Company!Employee (
	   person <- s.person,
	   salary <- s.salary / 2  					-- cutting
	 )
}

 
rule Person2Person {
	from 
	 s : Company!Person 
	to
	 t : Company!Person (
	   name <- s.name,
	   address <- s.address
	 )
	
}